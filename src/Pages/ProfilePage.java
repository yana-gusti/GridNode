/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Pages;

import grid_node.Main;

import javax.swing.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Дом
 */
public class ProfilePage extends JFrame {
    public static EditProfilePage editProfilePage;
    public static CreateJobPage createJobPage;
    public static SubmitJobPage submitJobPage;



    /**
     * Creates new form ProfilePage
     */
    public ProfilePage() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TopPanel = new JPanel();
        TopLabel = new JLabel();
        MainPanel = new JPanel();
        MenuPanel = new JPanel();
        EditProfileBtn = new JButton();
        RemoveJobBtn = new JButton();
        CreateJobBtn = new JButton();
        LogoutBtn = new JButton();
        PersonDataPanel = new JPanel();
        SubmitJobBtn = new JButton();
        jScrollPane1 = new JScrollPane();
        ResultTextPane = new JTextPane();
        StatusBtn = new JButton();
        JobName = new JTextField();
        ListOfJob = new JButton();
        textArea = new java.awt.TextArea();
        textArea.setVisible(false);
        textArea.setText("");
        ResultOfJobBtn = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        TopPanel.setBackground(new java.awt.Color(153, 255, 255));
        TopPanel.setForeground(new java.awt.Color(0, 0, 153));
        TopPanel.setToolTipText("Grid Node");
        TopPanel.setFont(new java.awt.Font("Verdana", 3, 24)); // NOI18N

        TopLabel.setFont(new java.awt.Font("Verdana", 3, 36)); // NOI18N
        TopLabel.setHorizontalAlignment(SwingConstants.CENTER);
        TopLabel.setText("Grid Node");
        TopLabel.setToolTipText("");

        MainPanel.setBackground(new java.awt.Color(204, 255, 255));

        MenuPanel.setBackground(new java.awt.Color(204, 255, 255));

        EditProfileBtn.setBackground(new java.awt.Color(0, 204, 204));
        EditProfileBtn.setText("Edit Profile");
        EditProfileBtn.setActionCommand("Registration");
        EditProfileBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        EditProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditProfileBtnActionPerformed(evt);
            }
        });

        RemoveJobBtn.setBackground(new java.awt.Color(0, 204, 204));
        RemoveJobBtn.setText("Remove Job");
        RemoveJobBtn.setActionCommand("Registration");
        RemoveJobBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        RemoveJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveJobBtnActionPerformed(evt);
            }
        });

        CreateJobBtn.setBackground(new java.awt.Color(0, 204, 204));
        CreateJobBtn.setText("Create Job");
        CreateJobBtn.setActionCommand("Registration");
        CreateJobBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CreateJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateJobBtnActionPerformed(evt);
            }
        });

        LogoutBtn.setBackground(new java.awt.Color(0, 204, 204));
        LogoutBtn.setText("Logout");
        LogoutBtn.setActionCommand("Registration");
        LogoutBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        PersonDataPanel.setBackground(new java.awt.Color(153, 255, 255));

        GroupLayout PersonDataPanelLayout = new GroupLayout(PersonDataPanel);
        PersonDataPanel.setLayout(PersonDataPanelLayout);
        PersonDataPanelLayout.setHorizontalGroup(
            PersonDataPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PersonDataPanelLayout.setVerticalGroup(
            PersonDataPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 188, Short.MAX_VALUE)
        );

        SubmitJobBtn.setBackground(new java.awt.Color(0, 204, 204));
        SubmitJobBtn.setText("Submit Job");
        SubmitJobBtn.setActionCommand("Registration");
        SubmitJobBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SubmitJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    SubmitJobBtnActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (ClassNotFoundException e) {
                    e.printStackTrace();
                }
            }
        });

        jScrollPane1.setViewportView(ResultTextPane);

        StatusBtn.setBackground(new java.awt.Color(0, 204, 204));
        StatusBtn.setText("Details of Job");
        StatusBtn.setActionCommand("Registration");
        StatusBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        StatusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusBtnActionPerformed(evt);
            }
        });

        JobName.setForeground(new java.awt.Color(153, 153, 153));
        JobName.setHorizontalAlignment(JTextField.CENTER);
        JobName.setText("Enter your Job name");
        JobName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JobNameMouseClicked(evt);
            }
        });

        ListOfJob.setBackground(new java.awt.Color(0, 204, 204));
        ListOfJob.setText("List of Jobs");
        ListOfJob.setActionCommand("Registration");
        ListOfJob.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ListOfJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListOfJobActionPerformed(evt);
            }
        });

        ResultOfJobBtn.setBackground(new java.awt.Color(0, 204, 204));
        ResultOfJobBtn.setText("Result of Job");
        ResultOfJobBtn.setActionCommand("Registration");
        ResultOfJobBtn.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ResultOfJobBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultOfJobBtnActionPerformed(evt);
            }
        });

        GroupLayout MenuPanelLayout = new GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addGroup(MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(MenuPanelLayout.createSequentialGroup()
                                .addGroup(MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(JobName, GroupLayout.Alignment.LEADING)
                                    .addComponent(ListOfJob, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PersonDataPanel, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(GroupLayout.Alignment.LEADING, MenuPanelLayout.createSequentialGroup()
                                        .addComponent(EditProfileBtn, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CreateJobBtn, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                                    .addComponent(RemoveJobBtn, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(StatusBtn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(ResultOfJobBtn, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                                .addComponent(SubmitJobBtn, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(LogoutBtn, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 344, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addComponent(textArea, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGroup(MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(EditProfileBtn, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateJobBtn, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogoutBtn, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubmitJobBtn, GroupLayout.PREFERRED_SIZE, 42, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MenuPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 424, GroupLayout.PREFERRED_SIZE)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addComponent(PersonDataPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ListOfJob, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JobName, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(StatusBtn, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResultOfJobBtn, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RemoveJobBtn, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textArea, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        GroupLayout MainPanelLayout = new GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(MenuPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(MenuPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 243, Short.MAX_VALUE))
        );

        GroupLayout TopPanelLayout = new GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addComponent(TopLabel, GroupLayout.PREFERRED_SIZE, 627, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TopLabel, GroupLayout.PREFERRED_SIZE, 59, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(336, 336, 336))
        );



        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(TopPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TopPanel, GroupLayout.PREFERRED_SIZE, 573, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditProfileBtnActionPerformed
        editProfilePage=new EditProfilePage();
        editProfilePage.setVisible(true);
        LoginPage.profilePage.setVisible(false);
    }//GEN-LAST:event_EditProfileBtnActionPerformed

    private void RemoveJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveJobBtnActionPerformed
        textArea.setText("");
        String s = null;
       try {
            Process p = Runtime.getRuntime().exec("ping -c 3 cisco.com");
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(p.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
            // read the output from the command
            while ((s = stdInput.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
            // read any errors from the attempted command
            System.out.println("Here is the standard error of the command (if any):\n");
            while ((s = stdError.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
        }
        catch (IOException e) {
            System.out.println("exception happened - here's what I know: ");
            e.printStackTrace();
        }
    }//GEN-LAST:event_RemoveJobBtnActionPerformed

    private void CreateJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateJobBtnActionPerformed
        createJobPage=new CreateJobPage();
        createJobPage.setVisible(true);
        LoginPage.profilePage.setVisible(false);
    }//GEN-LAST:event_CreateJobBtnActionPerformed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed

        Main.loginPage.setVisible(true);
        try{
            LoginPage.profilePage.setVisible(false);
        }catch(Exception e){
            RegistrationPage.profilePage.setVisible(false);
        }

    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void SubmitJobBtnActionPerformed(java.awt.event.ActionEvent evt) throws IOException, ClassNotFoundException {//GEN-FIRST:event_SubmitJobBtnActionPerformed
        submitJobPage=new SubmitJobPage();
        submitJobPage.setVisible(true);
        LoginPage.profilePage.setVisible(false);
    }//GEN-LAST:event_SubmitJobBtnActionPerformed

    private void StatusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusBtnActionPerformed
        textArea.setText("");
        String s = null;
       try {
            Process p = Runtime.getRuntime().exec("arcstat "+JobName.getText()+" && arccat "+JobName.getText()+"");
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(p.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
            // read the output from the command
            while ((s = stdInput.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
            // read any errors from the attempted command
            System.out.println("Here is the standard error of the command (if any):\n");
            while ((s = stdError.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
        }
        catch (IOException e) {
            System.out.println("exception happened - here's what I know: ");
            e.printStackTrace();
        }
    }//GEN-LAST:event_StatusBtnActionPerformed

    private void ListOfJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListOfJobActionPerformed
       textArea.setText("");
       String s = null;
       try {
            Process p = Runtime.getRuntime().exec("arcstat -a");
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(p.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
            // read the output from the command
            while ((s = stdInput.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
            // read any errors from the attempted command
            System.out.println("Here is the standard error of the command (if any):\n");
            while ((s = stdError.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
        }
        catch (IOException e) {
            System.out.println("exception happened - here's what I know: ");
            e.printStackTrace();
        }



    }//GEN-LAST:event_ListOfJobActionPerformed

    private void JobNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JobNameMouseClicked
      JobName.setText("");
    }//GEN-LAST:event_JobNameMouseClicked

    private void ResultOfJobBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResultOfJobBtnActionPerformed
        textArea.setText("");
        String s = null;
       try {
            Process p = Runtime.getRuntime().exec("arccat "+JobName.getText()+"");
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(p.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
            // read the output from the command
            while ((s = stdInput.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
            // read any errors from the attempted command
            System.out.println("Here is the standard error of the command (if any):\n");
            while ((s = stdError.readLine()) != null) {
                textArea.append(s+ "\n");
                ResultTextPane.setText(textArea.getText());
            }
        }
        catch (IOException e) {
            System.out.println("exception happened - here's what I know: ");
            e.printStackTrace();
        }
    }//GEN-LAST:event_ResultOfJobBtnActionPerformed
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateJobPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(CreateJobPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(CreateJobPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CreateJobPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfilePage().setVisible(true);
            }
        });
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public JButton CreateJobBtn;
    public JButton EditProfileBtn;
    public JTextField JobName;
    public JButton ListOfJob;
    public JButton LogoutBtn;
    private JPanel MainPanel;
    private JPanel MenuPanel;
    private JPanel PersonDataPanel;
    public JButton RemoveJobBtn;
    public JButton ResultOfJobBtn;
    public JTextPane ResultTextPane;
    public JButton StatusBtn;
    public JButton SubmitJobBtn;
    private JLabel TopLabel;
    public JPanel TopPanel;
    private JScrollPane jScrollPane1;
    public java.awt.TextArea textArea;
    // End of variables declaration//GEN-END:variables
    
}

